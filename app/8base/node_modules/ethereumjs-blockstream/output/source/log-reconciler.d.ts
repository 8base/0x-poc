import { Block } from "./models/block";
import { Log } from "./models/log";
import { Filter, FilterOptions } from "./models/filters";
export declare const reconcileLogHistoryWithAddedBlock: <TBlock extends Block, TLog extends Log>(getLogs: (filterOptions: FilterOptions) => Promise<TLog[]>, logHistory: import("../../../../../Users/micah/Source/ethereumjs-blockstream/node_modules/immutable").List<TLog> | Promise<import("../../../../../Users/micah/Source/ethereumjs-blockstream/node_modules/immutable").List<TLog>>, newBlock: TBlock, onLogAdded: (log: TLog) => Promise<void>, filters?: Filter[], historyBlockLength?: number) => Promise<import("../../../../../Users/micah/Source/ethereumjs-blockstream/node_modules/immutable").List<TLog>>;
export declare const reconcileLogHistoryWithRemovedBlock: <TBlock extends Block, TLog extends Log>(logHistory: import("../../../../../Users/micah/Source/ethereumjs-blockstream/node_modules/immutable").List<TLog> | Promise<import("../../../../../Users/micah/Source/ethereumjs-blockstream/node_modules/immutable").List<TLog>>, removedBlock: TBlock, onLogRemoved: (log: TLog) => Promise<void>) => Promise<import("../../../../../Users/micah/Source/ethereumjs-blockstream/node_modules/immutable").List<TLog>>;
